$date
	Sun Jan 12 20:01:40 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_testbench $end
$var wire 16 ! o_sum [15:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 4 $ C [3:0] $end
$var reg 4 % D [3:0] $end
$var reg 1 & clk $end
$var reg 1 ' go $end
$var reg 1 ( rst $end
$scope module dut $end
$var wire 4 ) A [3:0] $end
$var wire 4 * B [3:0] $end
$var wire 4 + C [3:0] $end
$var wire 4 , D [3:0] $end
$var wire 1 & clk $end
$var wire 1 ' go $end
$var wire 1 ( rst $end
$var wire 1 - output_enable $end
$var wire 16 . o_sum [15:0] $end
$var wire 1 / dload $end
$var wire 1 0 cload $end
$var wire 2 1 bsel [1:0] $end
$var wire 1 2 bload $end
$var wire 1 3 asel $end
$var wire 1 4 aload $end
$scope module controller1 $end
$var wire 1 & clk $end
$var wire 1 ' go $end
$var wire 1 ( rst $end
$var parameter 3 5 S0 $end
$var parameter 3 6 S1 $end
$var parameter 3 7 S2 $end
$var parameter 3 8 S3 $end
$var parameter 3 9 S4 $end
$var parameter 3 : S5 $end
$var parameter 3 ; S6 $end
$var reg 1 4 aload $end
$var reg 1 3 asel $end
$var reg 1 2 bload $end
$var reg 2 < bsel [1:0] $end
$var reg 1 0 cload $end
$var reg 1 / dload $end
$var reg 3 = next_state [2:0] $end
$var reg 1 - output_enable $end
$var reg 3 > present_state [2:0] $end
$upscope $end
$scope module datapath1 $end
$var wire 4 ? A [3:0] $end
$var wire 4 @ B [3:0] $end
$var wire 4 A C [3:0] $end
$var wire 4 B D [3:0] $end
$var wire 1 4 aload $end
$var wire 1 3 asel $end
$var wire 1 2 bload $end
$var wire 2 C bsel [1:0] $end
$var wire 1 & clk $end
$var wire 1 0 cload $end
$var wire 1 / dload $end
$var wire 1 - output_enable $end
$var wire 1 ( rst $end
$var reg 4 D atemp [3:0] $end
$var reg 4 E btemp [3:0] $end
$var reg 4 F ctemp [3:0] $end
$var reg 4 G dtemp [3:0] $end
$var reg 16 H o_sum [15:0] $end
$var reg 16 I sum [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 ;
b101 :
b100 9
b11 8
b10 7
b1 6
b0 5
$end
#0
$dumpvars
b0 I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
b0 >
b0 =
bx <
x4
x3
x2
bx 1
x0
x/
bx .
x-
bx ,
bx +
bx *
bx )
1(
x'
0&
bx %
bx $
bx #
bx "
bx !
$end
#5000
1&
#10000
0&
b1000 %
b1000 ,
b1000 B
b100 $
b100 +
b100 A
b10 #
b10 *
b10 @
b0 "
b0 )
b0 ?
0'
0(
#15000
1&
#20000
0-
b1 =
0&
1'
#25000
b10 =
b1 >
1&
#30000
0&
#35000
b11 =
1/
10
12
14
b10 >
1&
#40000
0&
#45000
b100 =
b0 1
b0 <
b0 C
13
0/
00
02
04
b11 >
b1000 G
b100 F
b10 E
b0 D
1&
#50000
0&
#55000
b101 =
b1 1
b1 <
b1 C
03
b10 I
b100 >
1&
#60000
0&
#65000
b110 =
b10 1
b10 <
b10 C
b101 >
b110 I
1&
#70000
0&
#75000
b0 =
1-
b1110 I
b110 >
1&
#80000
0&
#85000
0-
b1 =
b0 >
b1110 !
b1110 .
b1110 H
1&
#90000
0&
#95000
b10 =
b10110 I
b1 >
1&
#100000
0&
#105000
b11 =
1/
10
12
14
b10 >
b11110 I
1&
#110000
0&
#115000
b100 =
b0 1
b0 <
b0 C
13
0/
00
02
04
b11 >
1&
#120000
0&
